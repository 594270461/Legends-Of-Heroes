syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

//ResponseType M2C_TestResponse
message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

//ResponseType Actor_TransferResponse
message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 1;
	int32 MapIndex = 2;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // IRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	// 自己unitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IActorMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IActorMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IActorMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;	
}

message M2C_RemoveUnits // IActorMessage
{
	repeated int64 Units = 2;
}

message C2M_PathfindingResult // IActorLocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message M2C_PathfindingResult // IActorMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message C2M_JoystickMove // IActorLocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 MoveForward = 2;
}


message M2C_JoystickMove // IActorMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	Unity.Mathematics.float3 MoveForward = 3;
}

message C2M_Stop // IActorLocationMessage
{
	int32 RpcId = 1;
}

message M2C_Stop // IActorMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

//ResponseType G2C_Ping
message C2G_Ping // IRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // IMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // IRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType R2C_Login
message C2R_Login // IRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_Login // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // IRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_LoginGate // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
	string LobbyAddress = 5;
}

message G2C_TestHotfixMessage // IMessage
{
	string Info = 1;
}

//ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // IActorLocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

//ResponseType M2C_TransferMap
message C2M_TransferMap // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_Benchmark
message C2G_Benchmark // IRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}


//ResponseType L2C_LoginLobby
message C2L_LoginLobby // IRequest
{
  int32 RpcId = 90;
  int64 PlayerId = 1;  // 帐号
}

message L2C_LoginLobby // IResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  repeated int64 RoomHolderPlayerList = 5;
  repeated int64 RoomIdList = 1;
  repeated string RoomNameList = 2;
  repeated int32 RoomPlayerNum = 3;
}

///////////////////////////////// 房间相关  START ///////////////////////////////////

//ResponseType L2C_CreateNewRoomLobby
message C2L_CreateNewRoomLobby // IRequest
{
  int32 RpcId = 90;
  int64 PlayerId = 1;  // 帐号
}

message L2C_CreateNewRoomLobby // IResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  int32 RoomId = 1;
  int32 mode = 2;
  int32 camp = 3; //阵营，房间位置
}

//ResponseType L2C_JoinRoomLobby
message C2L_JoinRoomLobby // IRequest
{
  int32 RpcId = 90;
  int64 PlayerId = 1;  // 帐号
  int64 RoomId = 2; //加入的房间Id
}

message L2C_JoinRoomLobby // IResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  int64 RoomId = 1; //加入的房间Id
  int32 camp = 2; //阵营，房间位置
  int64 RoomHolderId = 3;
  string RoomName = 4;
  repeated PlayerInfoRoom playerInfoRoom = 5;
}

message PlayerInfoRoom
{
  string Account = 1;
  int64 UnitId = 2;
  int64 SessionId = 3;
  int64 RoomId = 4;
  int32 camp = 5;
  int64 playerid = 6;
}

message L2C_PlayerTriggerRoom // IActorMessage
{
  int32 RpcId = 90;
  int64 ActorId = 93;
  PlayerInfoRoom playerInfoRoom = 1;
  bool JoinOrLeave = 2;
}

//ResponseType L2C_LeaveRoomLobby
message C2L_LeaveRoomLobby // IRequest
{
  int32 RpcId = 90;
  int64 PlayerId = 1;  // 帐号
}

message L2C_LeaveRoomLobby // IResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  int32 camp = 1; //阵营，房间位置
  int64 newRoomHolder = 2; //更换房主的时候选的新房主
  int64 RoomId = 4; // 离开的RoomId
  int64 PlayerId = 5;
  bool isDestory = 3;
}

message PlayerBattleInfo
{
  int64 PlayerId = 1;
  int32 HeroConfig = 2;
}

//ResponseType L2C_StartGameLobby
message C2L_StartGameLobby // IRequest
{
  int32 RpcId = 90;
  int64 PlayerId = 1;  // 帐号
  repeated PlayerBattleInfo PlayerBattleInfos = 2;
}

message L2C_StartGameLobby // IResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  repeated int64 list = 1;
}

message PlayerBattlePoint
{
  int64 PlayerId = 1;
  int32 Point = 2;
  int32 SingleMatchCount = 3;
  string Account = 4;
  int64 UnitId = 5;
}

message L2C_PrepareToEnterBattle  // IMessage
{
}

message C2L_PreparedToEnterBattle // IMessage
{
  int64 PlayerId = 1;
}

message L2C_AllowToEnterMap // IMessage
{

}
///////////////////////////////// 房间相关  END ///////////////////////////////////

